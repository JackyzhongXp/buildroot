#!/usr/bin/env python
import argparse
import sys
import os
import string

import nose2

from infra.basetest import BRTest

def main():
    parser = argparse.ArgumentParser(description='Run Buildroot tests')
    parser.add_argument('testname', nargs='*',
                        help='list of test cases to execute')
    parser.add_argument('--list', '-l', action='store_true',
                        help='list of available test cases')
    parser.add_argument('--all', '-a', action='store_true',
                        help='execute all test cases')
    parser.add_argument('--stdout', '-s', action='store_true',
                        help='log everything to stdout')
    parser.add_argument('--output', '-o',
                        help='output directory')
    parser.add_argument('--download', '-d',
                        help='download directory')

    args = parser.parse_args()

    script_path = os.path.realpath(__file__)
    test_dir = os.path.dirname(script_path)

    if args.stdout:
        BRTest.logtofile = False

    if args.list:
        print "List of tests"
        nose2.discover(argv=[script_path,
                             "-s", test_dir,
                             "-v",
                             "--collect-only"],
                       plugins=["nose2.plugins.collect"])
        return 0

    if args.download is None:
        print "Missing download directory, please use -d/--download"
        return 1

    BRTest.downloaddir = args.download

    if args.output is None:
        print "Missing output directory, please use -o/--output"
        return 1

    if not os.path.exists(args.output):
        print "The selected output directory does not exist"
        return 1

    BRTest.outputdir = args.output

    if args.all is False and len(args.testname) == 0:
        print "No test selected"
        return 1

    nose2_args = ["-v",
                  "-s", "support/testing",
                  "-c", "support/testing/conf/unittest.cfg"]

    if len(args.testname) != 0:
        nose2_args += args.testname

    nose2.discover(argv=nose2_args)

if __name__ == "__main__":
    sys.exit(main())
